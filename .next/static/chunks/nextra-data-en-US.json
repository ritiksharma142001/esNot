{"/java":{"title":"Java","data":{}},"/":{"title":"Notes","data":{"":"this is home page","contents#Contents":"","connect#Connect":"","html#HTML":"HTML - 1","css#CSS":"CSS - 1","javascript#JavaScript":"JavaScript - 1\nJavaScript - 2\nJavaScript - 3","cheatcode#cheatcode":"Assessment\tWeight (%)\tAssignments\t10 x 5% each = 50%\tProject Topic\t10%\tProject Implementation\t40%\tTotal\t100%","prerequisites#Prerequisites":"student repositories.Create a week-10 folder in your Next.js project and copy the contents of your week-9 folder into it.","part-2-add-cloud-firestore-in-firebase#Part 2: Add Cloud Firestore in Firebase":"","firebase-console#Firebase console":"Navigate to the Firebase console (https://console.firebase.google.com/) and to the project you created in Week 8.","add-cloud-firestore-service#Add Cloud Firestore service":"Under the Product Categories menu on the left, click \"Build\" and then click on the \"Cloud Firestore\".Click on the \"Create database\" button.In the pop-up window, use the default settings and click \"Next\".Select \"Start in production mode\" and click \"Enable\".","configure-firestore-rules#Configure Firestore rules":"Click on the \"Rules\" tab and replace the default rules with the following. These rules will only allow authenticated users (request.auth != null) to read and write to their own documents (request.auth.uid == userId). These rules are \"good enough\" for security purposes.\nrules_version = '2';\r\n\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /users/{userId} {\r\n      allow read, write: if request.auth != null && request.auth.uid == userId;\r\n        match /items/{itemId} {\r\n          allow read, write: if request.auth != null && request.auth.uid == userId;\r\n      }\r\n    }\r\n  }\r\n}\nFeel free to try the following more restrictive rules. However, you will need to ensure that your data structure matches the rules exactly.Click on the \"Publish\" button to publish the new rules.\nThe data in Cloud Firestore will have the following structure.\nusers collection\nuserId document\nitems subcollection\nitemId document","-knowledge-check#üìö Knowledge Check":"If you ever change your GitHub username, you must let your instructor know.\r\nThis will ensure that your assignments are graded correctly.","youtube#Youtube":"","slides#Slides":"Slide controls: use arrow keys to navigate, press ? for help, press f to toggle fullscreen, o for overview mode.","user-registration-and-authentication#User Registration and Authentication":"A commonplace feature in web applications is the ability for users to register and login. When a user fills out a registration form on the client-side (handled by React.js, Angular.js, Vue.js, etc.), this data is sent to the server-side (Node.js, Python, Ruby, Java, PHP, etc.). The server processes the data, securely stores user information in a database, and then sends a confirmation back to the client-side. When the user attempts to login, the server verifies the entered credentials against the stored data and, if valid, sends a response back to the client-side to grant the user access.","Ô∏è-summary#üóíÔ∏è Summary":"While exploring this example, if you encounter aspects that are unclear or confusing, remember there are resources available to help. You can rely on AI-powered tools to answer specific questions or provide further explanations on topics you find challenging. Another valuable resource is your instructor, who has a deep understanding of the topic and can clarify complex concepts, explain the code in a different way, or help troubleshoot any issues you might be facing. Don't hesitate to seek help when needed. Learning is a journey, and asking questions is an essential part of the process.\nFailure to name the project and repository correctly will result in a 0 for\r\nall assignments.","compiler#Compiler":"Online Compiler : TypeScript Playground\nGood to know:\nThe .js, .jsx, or .tsx file extensions can be used for Pages.\nA page is always the leaf of the route subtree.\nA page.js file is required to make a route segment publicly accessible.\nPages are Server Components by default, but can be set to a Client Component.\nPages can fetch data. View the Data Fetching section for more information.\nExplore the Project Showcase to see what former students have built in this course\nView Source Code on GitHub\npnpm: Fast, disk space efficient package manager.\nnpm is a package manager for the JavaScript programming language.\nYarn is a software packaging system.\n// app/page.js\r\nexport default function Page() {\r\n  return <h1>Hello, javascript page!</h1>;\r\n}\n// app/page.tsx\r\nexport default function Page() {\r\n  return <h1>Hello, typescript page!</h1>;\r\n}\n// app/page.tsx\r\nexport default function Page() {\r\n  return <h1>Hello, java page!</h1>;\r\n}\nThe following features are configured via the Next.js configuration and are\r\navailable in all themes.\nExample: Nextra Docs Theme has sidebar and navbar\r\ngenerated automatically from Markdown files.\n## Hello MDX \r\n\r\nimport { useState } from 'react'\r\n\r\nexport function Counter({ children }) {\r\n  const [count, setCount] = useState(0)\r\n  return (\r\n    <button onClick={() => setCount(count + 1)}>\r\n      {children}\r\n      {count}\r\n    </button>\r\n  )\r\n}\r\n\r\n<Counter>**Clicks**: </Counter>\n- [x] Write the press release\r\n- [ ] Update the website\r\n- [ ] Contact the media\n| Syntax        | Description |   Test Text |\r\n| :------------ | :---------: | ----------: |\r\n| Header        |    Title    | Here's this |\r\n| Paragraph     |    Text     |    And more |\r\n| Strikethrough |             |    ~~Text~~ |\nimport { useState } from 'react'\r\n \r\nfunction Counter() {\r\n  const [count, setCount] = useState(0)\r\n  return <button onClick={() => setCount(count + 1)}>{count}</button>\r\n}\nimport { useState } from 'react'\r\n \r\nfunction Counter() {\r\n  const [count, setCount] = useState(0)\r\n  return <button onClick={() => setCount(count + 1)}>{count}</button>\r\n}\nimport { useState } from 'react'\r\n \r\nfunction Counter() {\r\n  const [count, setCount] = useState(0)\r\n  return <button onClick={() => setCount(count + 1)}>{count}</button>\r\n}\nnpm i -D @graphql-eslint/eslint-plugin\npnpm add -D @graphql-eslint/eslint-plugin\nyarn add --dev @graphql-eslint/eslint-plugin\nbun add --dev @graphql-eslint/eslint-plugin\npnpm: Fast, disk space efficient package manager.\nnpm is a package manager for the JavaScript programming language.\nYarn is a software packaging system.\nSet the repository URL of the documentation. It‚Äôs used to generate the\r\n‚ÄúEdit this page‚Äù link and the ‚ÄúFeedback‚Äù link.\nTry it out for this website:\nHue\tSaturation","this-is-me#this is me":""}}}